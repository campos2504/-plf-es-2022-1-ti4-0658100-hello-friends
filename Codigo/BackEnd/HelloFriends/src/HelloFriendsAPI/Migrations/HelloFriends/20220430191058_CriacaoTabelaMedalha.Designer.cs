// <auto-generated />
using System;
using HelloFriendsAPI.Repositorys.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HelloFriendsAPI.Migrations.HelloFriends
{
    [DbContext(typeof(HelloFriendsContext))]
    [Migration("20220430191058_CriacaoTabelaMedalha")]
    partial class CriacaoTabelaMedalha
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HelloFriendsAPI.Model.Aluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAniversario");

                    b.Property<string>("Email");

                    b.Property<string>("Imagem");

                    b.Property<string>("NomeCompleto");

                    b.Property<string>("NomeResponsavel");

                    b.Property<string>("Situacao");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.CompletaFrase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Enunciado");

                    b.Property<string>("Imagem");

                    b.Property<long>("ModuloId");

                    b.Property<string>("PalavrasChaves");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.ToTable("CompletaFrase");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.CompletaTexto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Enunciado");

                    b.Property<string>("Imagem");

                    b.Property<long>("ModuloId");

                    b.Property<string>("PalavrasChaves");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.ToTable("CompletaTexto");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.Medalha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<bool>("ModuloConcluido");

                    b.Property<long>("ModuloId");

                    b.Property<string>("TipoMedalha");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ModuloId");

                    b.ToTable("Medalha");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.Modulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagem");

                    b.Property<string>("NomeModulo");

                    b.HasKey("Id");

                    b.ToTable("Modulo");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.OpcaoCerta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlternativaA");

                    b.Property<string>("AlternativaB");

                    b.Property<string>("AlternativaC");

                    b.Property<string>("AlternativaCerta")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("AlternativaD");

                    b.Property<string>("Imagem");

                    b.Property<long>("ModuloId");

                    b.Property<string>("Pergunta");

                    b.Property<string>("Texto");

                    b.Property<string>("Titulo");

                    b.Property<string>("Video");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.ToTable("OpcaoCerta");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasCompleFrase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<Guid>("CompletaFraseID");

                    b.Property<long>("MId");

                    b.Property<double>("Resultado");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CompletaFraseID");

                    b.ToTable("RespostasCompleFrase");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasCompletaTexto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<Guid>("CompletaTextoID");

                    b.Property<long>("MId");

                    b.Property<double>("Resultado");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CompletaTextoID");

                    b.ToTable("RespostasCompletaTexto");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasOpcaoCerta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<long>("MId");

                    b.Property<Guid>("OpcaoCertaID");

                    b.Property<double>("Resultado");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("OpcaoCertaID");

                    b.ToTable("RespostasOpcaoCerta");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasVF", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<long>("MId");

                    b.Property<double>("Resultado");

                    b.Property<Guid>("VerdadeiroFalsoID");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("VerdadeiroFalsoID");

                    b.ToTable("RespostasVF");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.VerdadeiroFalso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AlternativaCerta");

                    b.Property<string>("Imagem");

                    b.Property<long>("ModuloId");

                    b.Property<string>("Pergunta");

                    b.Property<string>("Texto");

                    b.Property<string>("Titulo");

                    b.Property<string>("Video");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.ToTable("VerdadeiroFalso");
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.CompletaFrase", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.CompletaTexto", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.Medalha", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloFriendsAPI.Model.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.OpcaoCerta", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasCompleFrase", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloFriendsAPI.Model.CompletaFrase", "CompletaFrase")
                        .WithMany()
                        .HasForeignKey("CompletaFraseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasCompletaTexto", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloFriendsAPI.Model.CompletaTexto", "CompletaTexto")
                        .WithMany()
                        .HasForeignKey("CompletaTextoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasOpcaoCerta", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloFriendsAPI.Model.OpcaoCerta", "OpcaoCerta")
                        .WithMany()
                        .HasForeignKey("OpcaoCertaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.RespostasVF", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloFriendsAPI.Model.VerdadeiroFalso", "VerdadeiroFalso")
                        .WithMany()
                        .HasForeignKey("VerdadeiroFalsoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloFriendsAPI.Model.VerdadeiroFalso", b =>
                {
                    b.HasOne("HelloFriendsAPI.Model.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
